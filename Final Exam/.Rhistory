getwd()
setwd("./Downloads/New/Analytical Edge/Final Exam/")
households <- read.csv("Households.csv")
str(households)
table(households$MorningPct)
str(households)
head(households$MorningPct)
length(households$MorningPct)
length(households$MorningPct == 0)
households$MorningPct == 0
sum(households$MorningPct == 0)
sum(households$AfternoonPct == 0)
sum(households$AfternoonPct != 0)
sum(households$MorningPct != 0)
sum(households$MorningPct != 0)
sum(households$AfternoonPct != 0)
str(households)
table(households$AvgSalesValue >= 150)
households$AvgSalesValue >= 150
households$AvgSalesValue[households$AvgSalesValue >= 150]
min(households$AvgSalesValue[households$AvgSalesValue >= 150])
min(households$AvgDiscount[households$AvgDiscount >= 25])
households$AvgDiscount[households$AvgDiscount >= 25]
min(households$AvgSalesValue[households$AvgDiscount >= 25])
min(households$AvgDiscount[households$AvgSalesValue >= 150])
str(households)
sum(households$NumVisits >= 300)
sum(households$NumVisits >= 300) / nrow(households)
sumamry(households)
summary(households)
Households <- read.csv("Households.csv")
library(caret)
preproc = preProcess(Households)
HouseholdsNorm = predict(preproc, Households)
summary(HouseholdsNorm)
set.seed(200)
distances <- dist(HouseholdsNorm, method = "euclidean")
ClusterShoppers <- hclust(distances, method = "ward.D")
plot(ClusterShoppers, labels = FALSE)
set.seed(200)
set.seed(200)
km <- kmeans(HouseholdsNorm, 10)
table(km$cluster)
HouseholdsClusters = km$cluster
km$centers[1]
kclust1 <- subset(Households, HouseholdsClusters == 1)
kclust2 <- subset(Households, HouseholdsClusters == 2)
kclust3 <- subset(Households, HouseholdsClusters == 3)
kclust4 <- subset(Households, HouseholdsClusters == 4)
kclust5 <- subset(Households, HouseholdsClusters == 5)
kclust6 <- subset(Households, HouseholdsClusters == 6)
kclust7 <- subset(Households, HouseholdsClusters == 7)
kclust8 <- subset(Households, HouseholdsClusters == 8)
kclust9 <- subset(Households, HouseholdsClusters == 9)
kclust10 <- subset(Households, HouseholdsClusters == 10)
kclust1
apply(split(Households, HouseholdsClusters), colMeans)
sapply(split(Households, HouseholdsClusters), colMeans)
distances <- dist(HouseholdsNorm, method = "euclidean")
ClusterShoppers <- hclust(distances, method = "ward.D")
plot(ClusterShoppers, labels = FALSE)
km <- kmeans(HouseholdsNorm, 10)
# How many observations are in the smallest $ largest cluster?
table(km$cluster)
km2 <- kmeans(HouseholdsNorm, 5)
table(km2$cluster)
sort(table(km2$cluster))
set.seed(5000)
km2 <- kmeans(HouseholdsNorm, 5)
table(km2$cluster)
HouseholdsClusters = km2$cluster
k2clust1 <- subset(Households, HouseholdsClusters == 1)
k2clust2 <- subset(Households, HouseholdsClusters == 2)
k2clust3 <- subset(Households, HouseholdsClusters == 3)
k2clust4 <- subset(Households, HouseholdsClusters == 4)
k2clust5 <- subset(Households, HouseholdsClusters == 5)
sapply(split(Households, HouseholdsClusters), colMeans)
km2$centers
